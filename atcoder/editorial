Let pi be the destination of the i-th infant from the left, and the value to be calculated will be the maximum value of the sum of Ai ∗ | i−pi |. Since | x−y | = max (x−y, y−x), instead of saying “Add Ai ∗ | i−pi | to the score”, use “Ai ∗ (i−p [i])” If you rephrase "Ai * (p [i] −i), choose the one you like best and add it to the score." Then, for the set of subscripts i in which Ai ∗ (i−p [i]) is selected, pi is set to 1,2,3 ,. It can be said that it is optimal to set pi to N, N−1, N−2, .. .. from the larger Ai for the set of subscripts i that selects [i] −i). Based on the above, the answer can be obtained with the complexity of O (N2) by using primitive dynamic programming. Specifically, DP [x] [y] are already assigned x + y people from the one with the highest degree of activity, and among them, Ai * (i−p [i]) is selected for x and Ai * (for i). You can define p (i] −i) as the maximum score when you select it, and calculate in ascending order of x + y.